{"version":3,"sources":["App.js"],"names":["HomeScreen","navigation","style","flex","alignItems","justifyContent","title","onPress","toggleDrawer","TodoInput","props","useState","text","setText","flexDirection","height","borderColor","borderWidth","borderRadius","onChangeText","value","marginLeft","padding","backgroundColor","color","ToDoApp","todoItems","setTodoItems","barStyle","fontSize","fontWeight","data","keyExtractor","item","index","toString","renderItem","paddingVertical","_index","tempArr","splice","deleteTodoItem","_text","openDrawer","Counter","state","count","increment","setState","reset","styles","counterText","this","activeOpacity","React","Component","Login","loggedIn","setLoggedIn","username","setUsername","password","setPassword","paragraph","placeholder","secureTextEntry","Stopwatch","onButtonStart","timer","setInterval","num","Number","seconds_Counter","minutes_Counter","length","startDisable","onButtonStop","clearInterval","onButtonClear","disabled","Drawer","createDrawerNavigator","App","Navigator","Screen","name","component","StyleSheet","create","MainContainer","button","width","paddingTop","paddingBottom","marginTop","buttonText","textAlign"],"mappings":"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","file":"static/js/app.cd3eb4ce.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, SafeAreaView, StatusBar, FlatList, TouchableOpacity, TextInput } from 'react-native';\r\nimport { Button, Text, Card, Input} from 'react-native-elements';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nfunction HomeScreen({navigation}) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Home Screen</Text>\r\n      <Button title=\"Toggle drawer\" onPress={() => navigation.toggleDrawer()} />\r\n    </View>\r\n  );\r\n}\r\n\r\n function TodoInput(props) {\r\n    const [text, setText] = useState(null);\r\n\r\n    // Render\r\n    return (\r\n        <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\r\n            <TextInput\r\n                style={{ flex: 1, height: 40, borderColor: '#212121', borderWidth: 1, borderRadius: 8 }}\r\n                onChangeText={text => setText(text)}\r\n                value={text}\r\n            />\r\n            <TouchableOpacity\r\n                style={{marginLeft: 8, padding: 8, backgroundColor: '#212121', justifyContent: 'center', alignItems: 'center', borderRadius: 8}}\r\n                onPress={() => props.onPress(text)}>\r\n                <Text style={{color: '#fafafa'}}>Add</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst ToDoApp = ({navigation}) => {\r\n  const [todoItems, setTodoItems] = useState([\"Buy groceries\", \"Walk dog\"]);\r\n\r\n    // Add a new item to the state\r\n    function addTodoItem(_text) {\r\n        setTodoItems([...todoItems, _text]);\r\n    }\r\n\r\n    // Delete an item from state by index\r\n    function deleteTodoItem(_index){\r\n        let tempArr = [...todoItems];\r\n        tempArr.splice(_index, 1);\r\n        setTodoItems(tempArr)\r\n    }\r\n\r\n    // Render\r\n    return (\r\n        <>\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <StatusBar barStyle={\"light-content\"} backgroundColor={\"#212121\"}/>\r\n            <SafeAreaView style={{padding: 16, justifyContent: 'space-between', flex: 1}}>\r\n                <Text style={{fontSize: 36, fontWeight: 'bold'}}>Todo App</Text>\r\n                <FlatList\r\n                    data={todoItems}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    renderItem={({item, index}) => {\r\n                        return (\r\n                            <TouchableOpacity\r\n                                style={{paddingVertical: 8}}\r\n                                onPress={() => {\r\n                                    deleteTodoItem(index);\r\n                                }}>\r\n                                <Text style={{fontSize: 18}}>{item}</Text>\r\n                            </TouchableOpacity>\r\n                        )\r\n                    }}\r\n                />\r\n                <TodoInput onPress={addTodoItem} />\r\n              <Button \r\n              title=\"Open drawer\"\r\n              onPress={() => navigation.openDrawer()} />\r\n            </SafeAreaView>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nclass Counter extends React.Component {\r\n  state = {\r\n    count: 0\r\n  };\r\n\r\n  increment = () => {\r\n    this.setState({\r\n      count: this.state.count + 1\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      count: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Text>Press to Increment</Text>\r\n        <Text style={styles.counterText}>{this.state.count}</Text>\r\n        <Button title=\"Increase\"\r\n          onPress={this.increment}\r\n          activeOpacity={0.6}>\r\n          </Button>\r\n          <Button title=\"Reset\"\r\n          onPress={this.reset}\r\n          activeOpacity={0.6}>\r\n          </Button>\r\n          <Button \r\n            title=\"Open drawer\"\r\n            onPress={() => this.props.navigation.openDrawer()} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n function Login ({navigation}) {\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('username');\r\n  const [password, setPassword] = useState('password');\r\n\r\n  const verifyUser = () => {\r\n    if (username == \"ShlokJani\" && password == \"1234\") {\r\n      setLoggedIn(true);\r\n    }\r\n  }\r\n\r\n  const logOut = () => {\r\n    setLoggedIn(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      {\r\n        loggedIn ? (\r\n          <View>\r\n            <Text style={styles.paragraph}>You are logged in!</Text>\r\n            <Button\r\n            title=\"Log Out\"\r\n            onPress={() => { logOut() } } />\r\n          </View>\r\n        ) : (\r\n          <View>\r\n            <Input placeholder='Username' onChangeText={ (value) => { setUsername(value) } } />\r\n            <Input placeholder=\"Password\" secureTextEntry={true} onChangeText={ (value) => { setPassword(value) } } />\r\n            <Button title=\"Submit\" onPress={() => { verifyUser() } } />\r\n            <Button \r\n            title=\"Open drawer\"\r\n            onPress={() => navigation.openDrawer()} />\r\n          </View>\r\n        )\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nclass Stopwatch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      timer: null,\r\n      minutes_Counter: '00',\r\n      seconds_Counter: '00',\r\n      startDisable: false\r\n    }\r\n  }\r\n \r\n  componentWillUnmount() {\r\n    clearInterval(this.state.timer);\r\n  }\r\n \r\n  onButtonStart = () => {\r\n \r\n    let timer = setInterval(() => {\r\n \r\n      var num = (Number(this.state.seconds_Counter) + 1).toString(),\r\n        count = this.state.minutes_Counter;\r\n \r\n      if (Number(this.state.seconds_Counter) == 59) {\r\n        count = (Number(this.state.minutes_Counter) + 1).toString();\r\n        num = '00';\r\n      }\r\n \r\n      this.setState({\r\n        minutes_Counter: count.length == 1 ? '0' + count : count,\r\n        seconds_Counter: num.length == 1 ? '0' + num : num\r\n      });\r\n    }, 1000);\r\n    this.setState({ timer });\r\n \r\n    this.setState({startDisable : true})\r\n  }\r\n \r\n \r\n  onButtonStop = () => {\r\n    clearInterval(this.state.timer);\r\n    this.setState({startDisable : false})\r\n  }\r\n \r\n \r\n  onButtonClear = () => {\r\n    this.setState({\r\n      timer: null,\r\n      minutes_Counter: '00',\r\n      seconds_Counter: '00',\r\n    });\r\n  }\r\n \r\n  render() {\r\n \r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n        <Text>Press to start time</Text>\r\n        <Text style={styles.counterText}>{this.state.minutes_Counter} : {this.state.seconds_Counter}</Text>\r\n \r\n        <Button\r\n          title=\"Start\"\r\n          onPress={this.onButtonStart}\r\n          activeOpacity={0.6}\r\n          disabled={this.state.startDisable} >\r\n        </Button>\r\n        <Button\r\n          title=\"Stop\"\r\n          onPress={this.onButtonStop}\r\n          activeOpacity={0.6}>\r\n        </Button>\r\n\r\n        <Button \r\n          title=\"Clear\"\r\n          onPress={this.onButtonClear}\r\n          activeOpacity={0.6}\r\n          disabled={this.state.startDisable} > \r\n        </Button>\r\n \r\n         <Button \r\n            title=\"Open drawer\"\r\n            onPress={() => this.props.navigation.openDrawer()} />\r\n      </View>\r\n \r\n    );\r\n  }\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Drawer.Navigator>\r\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\r\n        <Drawer.Screen name=\"Counter\" component={Counter} />\r\n        <Drawer.Screen name=\"Login screen\" component={Login} />\r\n        <Drawer.Screen name=\"Stopwatch\" component={Stopwatch} />\r\n        <Drawer.Screen name=\"Todo App\" component={ToDoApp} />\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  MainContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#F5FCFF',\r\n  },\r\n  button: {\r\n    width: '80%',\r\n    paddingTop:8,\r\n    paddingBottom:8,\r\n    borderRadius:7,\r\n    marginTop: 10\r\n  },\r\n  buttonText:{\r\n      color:'#fff',\r\n      textAlign:'center',\r\n      fontSize: 20\r\n  },\r\n  counterText:{\r\n\r\n    fontSize: 28,\r\n    color: '#000'\r\n  }\r\n});\r\n"],"sourceRoot":""}